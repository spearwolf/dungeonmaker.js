XX  this is a comment
XX  the first letter of every line determines what data are expected

XX  background must be OPEN or CLOSED, openings must be of "Direction"-type
XX  dimX   dimY   background   joinDist  tunnelJoinDist  opening1  opening 2 ...  
D   140    140    CLOSED       12        18              NO        SO 

XX  enter rectangles this way 
XX  startX    startY   endX   endY   type 
R   1         1        30     138    OPEN 
R   31        1        70     30     OPEN
R   31        110      70     138    OPEN
R   71        1        138    20     OPEN
R   71        120      138    138    OPEN
R   120       21       138    119    OPEN

R   120       21       120    119    G_CLOSED
R   70        20       120    20     G_CLOSED
R   70        120      120    120    G_CLOSED
R   70        20       70     30     G_CLOSED
R   70        110      70     120    G_CLOSED
R   31        30       70     30     G_CLOSED
R   31        110      70     110    G_CLOSED

R   31        30       31     50     G_CLOSED
R   31        90       31     110    G_CLOSED

R   108       60       119    80     IR_OPEN
R   108       60       119    60     G_CLOSED
R   108       80       119    80     G_CLOSED
R   107       69       107    71     H_DOOR
R   100       67       106    73     OPEN

R   103       70       103    70     CLOSED

R   112       69       113    71     TREAS3

XX probabilities that a baby Crawler will be born after i generations
XX indices above 10 are illegal, enter integer values for all 11 indices
XX i =   0     1     2     3     4     5     6     7     8     9     10
BC       0     70    30    0     0     0     0     0     0     0     0
XX values must add up to 100

XX probabilities that a baby Roomie will be born after i generations
XX indices above 10 are illegal, enter integer values for all 11 indices
XX i =   0     1     2     3     4     5     6     7     8     9     10
BR       0     0     100   0     0     0     0     0     0     0     0
XX values must add up to 100

XX probabilities that a baby Tunneler will be born after i generations
XX (applicable only for those Tunnelers who are not larger than their parents -
XX - for those larger than their parents, use sizeUpGenDelay)
XX indices above 10 are illegal, enter integer values for all 11 indices
XX i =   0     1     2     3     4     5     6     7     8     9     10
BT       0     0     100   0     0     0     0     0     0     0     0
XX values must add up to 100

XX probabilities that a baby Tunneler of generation gen will have a tunnelWidth 1 size larger than its parent
XX sizeUpProb - end with -1 to repeat last value 
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13 14 15 16 17 18 19 20 
ZU       0   0   50  -1
XX probabilities that a baby Tunneler of generation gen will have a tunnelWidth 1 size smaller than its parent
XX sizeDownProb - end with -1 to repeat last value 
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13 14 15 16 17 18 19 20 
ZD       50  -1
XX for every generation, 100 - (sizeUpProb(gen) + sizeDownProb(gen) = probability that size remains the same,
XX and this value must be >= 0

XX probability that a Tunneler will make an anteroom when changing direction or spawning
XX tunnelWidth = 0    1    2    3    4    5    6    7    8   ...
F                20   0    0    0    0    100
XX value 100 ends the input and repeats for larger tunnels

XX joinPreference for generations of Tunneler, end with -1 to repeat last value
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13  14  15 
J        0   0   10  100 100 -1

XX Roomsizes and maximum numbers of rooms - first in Labyrinth - - - then in dungeon
XX minSize  medSize   larSize   maxSize  numSmlL   numMedL   numLarL   numSmlD   numMedD   numLarD 
T  20       50        100       200      20        10        5         30        8         2

XX probabilities to use a room of a certain size depending on tunnelWidth
XX the first line is for rooms coming out sideways from the tunnel, the second for rooms at branching sites
XX tW=0 SM  MD  LG    tW=1 SM  MD  LG   tW=2 SM  MD  LG   tW=3  SM  MD  LG   tW=4  SM  MD  LG   tW=5  SM  MD  LG  
GS      100 0   0          50  50  0         70  30  0          50  50  0          0   50  50         0   0   100 
GB      100 0   0          0   50  50        0   10  90         0   0   100
XX input ends when LG is at 100, then repeats at 100% large rooms
XX all probabilities should add up to 100

XX stepLength for generations of Crawler, end with 0 to repeat last value
XX gen = 0   1   2   3   4   5   6   7   8   9   10  
S        4   0

XX corridorWidth for generations of Crawler, end with 0 to repeat last value
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
C        15  7   7   3   3   1   3   1   3   1   3   1  3  1  3  1  0

XX maxAge for generations of Crawler, end with 0 to repeat last value
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
AC       10  10  10  10  10  8   10  8   12  8   15  8  15 10 15 10 0

XX maxAge for generations of Tunneler, end with 0 to repeat last value
XX gen = 0   1   2   3   4   5   6   7   8   9   10  11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 
AT       5   12  12  0

XX miscellaneous parameters:
XX mutator  noHeadingProb  patience   sizeUpGenDelay   columnsInTunnels  crawlersInTunnels   roomAspectRatio  genSpeedUpOnAnteRoom
M  30       0              90         1                0                 1                   0.4              4
XX seedCrawlersInTunnels   tunnelCrawlerGeneration   showMovie  storeMovie       randSeed          crawlersInAnterooms
N  5                       10                        1          0                1015855552        1
 
XX Randomly distributed Crawlers starting from the edge of the map, heading inwards, 99 stops it
XX Give the number per 1000 squares of outer wall (e.g. 5 would have a random Crawler every 200 squares)
XX Per generation 0  1  2  3  4  5  6  7  8  9  10  11  12  13  14 15  16  17  18  19  20
K                 0  0  50 30 36 0  60 12 60 26  0  32  16  99
XX Probability profile for all RandCrawlers (irrespective of generation)  
XX Expected value and variance for the genetic variables
XX   sSSP   sDSP   tSSP   tDSP   cDP
PR   0      30     0      40     30

XX Probability profile for all Crawlers that are seeded in Tunnels   
XX Expected value and variance for the variables
XX   maxAge  sL   sSSP  sDSP  tSSP  tDSP  cDP    closedProb
PT   15      2    0     40    0     50    40     100

XX Parameters for "last-chance-Tunnelers" that are created when a Tunneler runs out of room
XX   roomLeftProb  roomRightProb  changeDirProb  straightSpawnProb  turnSpawnProb  generationalDelay  
PU   100           100            30             20                 20             6

XX WallCrawlers entered here, singles and pairs
XX   locX   locY   dir  intDir dorm  maxAge  gen  sL  op   cW  sSSP  sDSP  tSSP  tDSP  cDP
WS   103    70     NO   NO     0     40      8    3   1    1   0     30    0     60    40
WS   103    70     EA   EA     0     40      8    3   1    1   0     30    0     60    40
WS   103    70     WE   WE     0     40      8    3   1    1   0     30    0     60    40

WS   31     51     NO   NO     0     20      2    3   1    1   0     30    0     60    40
WS   31     89     NO   NO     0     20      2    3   1    1   0     30    0     60    40

WP1  15     70     EA   EA     0     20      0    3   2    7   0     30    0     50    40
WP2  15     70     WE   WE     0     20      0    3   2    7   0     30    0     50    40
WP1  127    70     EA   EA     0     20      1    3   2    3   0     40    0     50    40
WP2  127    70     WE   WE     0     20      1    3   2    3   0     40    0     50    40

WS   31     30     NO   NO     0     20      2    3   1    3   0     50    0     40    10
WS   31     30     WE   WE     0     20      2    3   1    3   0     50    0     40    10
WS   31     110    NO   NO     0     20      2    3   1    3   0     50    0     40    10
WS   31     110    EA   EA     0     20      2    3   1    3   0     50    0     40    10

WS   70     20     NO   NO     0     20      2    3   1    3   0     20    0     60    30
WS   70     20     WE   WE     0     20      2    3   1    3   0     20    0     60    30
WS   70     120    NO   NO     0     20      2    3   1    3   0     20    0     60    30
WS   70     120    EA   EA     0     20      2    3   1    3   0     20    0     60    30

WS   120    20     SO   SO     0     20      2    3   1    3   0     10    0     30    50
WS   120    20     WE   WE     0     20      2    3   1    3   0     10    0     30    50
WS   120    120    SO   SO     0     20      2    3   1    3   0     10    0     30    50
WS   120    120    EA   EA     0     20      2    3   1    3   0     10    0     30    50

XX Tunnelers entered here:
XX   locX   locY   dir  intDir dorm  maxAge  gen  sL  tW   sDSP   tDSP  cDP  mRRP  mRLP  jP
U    103    67     WE   WE     0     7       0    5   1    40     80    40   100   100   100
U    103    73     EA   EA     0     7       0    5   1    40     80    40   100   100   100
U    100    70     NO   NO     0     7       0    5   1    70     30    10   100   100   100

U    30     55     SO   SO     0     7       0    3   3    30     50    40   100   100   100
U    30     85     SO   SO     0     7       0    3   3    30     50    40   100   100   100

XX MOBs and treasure follows below - input ended by negative number
XX MOBs in the labyrinth - index = category - E1 in rooms, E2 in the open
XX groupSize gSVariance  0   1   2   3   4   5   6   7
E1 4         4           10  0   10  0   4   -1
XX                       0   1   2   3   4   5   6   7
E2                       -1
XX MOBs in the dungeon - H1 in rooms, H2 in tunnels and anterooms
XX groupSize gSVariance  0   1   2   3   4   5   6   7
H1 4         4           0   20  10  5   2   -1
XX anteRoomProb          0   1   2   3   4   5   6   7
H2 80                    0   0   0   25  2   -1

XX Treasure - I1 in labyrinth, I2 in dungeon
XX groupSize gSVariance  0   1   2   3   4   5   6   7
I1 2         0           4   0   10  0   4   -1
I2 2         1           3   8   2   2   1   -1
